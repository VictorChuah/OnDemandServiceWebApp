@model fyptest.Models.JobCreateModel

@{
  ViewBag.Title = "PostJob";
}
@section head{
  <style>
    #upload img {
      width: 200px;
      height: 200px;
    }
  </style>
}
<h2>Post new Job</h2>

<div class="site-wrap">

  <div class="site-mobile-menu">
    <div class="site-mobile-menu-header">
      <div class="site-mobile-menu-close mt-3">
        <span class="icon-close2 js-menu-toggle"></span>
      </div>
    </div>
    <div class="site-mobile-menu-body"></div>
  </div> <!-- .site-mobile-menu -->

  <div style="height: 113px;"></div>
  <div class="unit-5 overlay" style="background-image: url(@Url.Content("~/Content/main/")images/hero_1.jpg);">
    <div class="container text-center">
      <h2 class="mb-0">Post a Job</h2>
      <p class="mb-0 unit-6"><a href="#">Home</a> <span class="sep">></span> <span>Post a Job</span></p>
    </div>
  </div>

  <div class="site-section bg-light">
    <div class="container">
      <div class="row">
        @using (Html.BeginForm("PostJobView", "Service", FormMethod.Post, new { enctype = "multipart/form-data", @class = "row" }))
        {
          <div class="col-md-12 col-lg-8 mb-5">
            @*<form action="#" class="p-5 bg-white">*@
            <div class="p-5 bg-white">
              @*<div class="row form-group">
      <div class="col-md-12 mb-3 mb-md-0">
        <label for="option-price-1">
          <input type="checkbox" id="option-price-1"> <span class="text-success">$300</span> For 30 days
        </label>
      </div>
      <div class="col-md-12 mb-3 mb-md-0">
        <label for="option-price-2">
          <input type="checkbox" id="option-price-2"> <span class="text-success">$200</span> / Monthly Recurring
        </label>
      </div>
    </div>*@
              <div class="col-md-10">
                @Html.ValidationMessage("Error", null, new { @class = "text text-danger" })
              </div>
              <div class="col-md-10">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
              </div>
              <div class="row form-group">
                <div class="col-md-12 mb-3 mb-md-0">
                  <label class="font-weight-bold" for="fullname">Job Title</label>
                  @*<input type="text" id="fullname" class="form-control" placeholder="eg. Title">*@
                  @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "eg. Title" })
                  @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
              </div>

              <div class="row form-group">
                <div class="col-md-12"><h3>Job Type</h3></div>
                @foreach (var item in Model.Type)
                {
                  <div class="col-md-12 mb-3 mb-md-0">
                    <label for="option-job-type-1">
                      @Html.RadioButtonFor(m => m.SelectedType, item.Value, new { @class = "js-radio" })
                      @item.Key
                    </label>
                    @Html.ValidationMessageFor(model => model.SelectedType, "", new { @class = "text-danger" })
                  </div>
                }

                @*<div class="col-md-12 mb-3 mb-md-0">
        <label for="option-job-type-2">
          <input type="radio" id="option-job-type-2" name="job-type"> Normal
        </label>
      </div>*@

              </div>

              <div class="row form-group mb-4">
                <div class="col-md-12"><h3>Location</h3></div>
                <div class="col-md-12 mb-3 mb-md-0">
                  @*<input type="text" class="form-control" placeholder="New York City">*@
                  @Html.TextBoxFor(m => m.Location, new { @class = "form-control", placeholder = "New York City" })
                  @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                </div>
              </div>

              <div class="row form-group mb-4">
                <div class="col-md-12"><h3>Category</h3></div>
                <div class="col-md-12 mb-3 mb-md-0">
                  @Html.DropDownListFor(m => m.Category, new SelectList(Model.CategoryList, "Value", "Text", "selectedValue"), new { @class = "form-select form-control" })
                </div>
              </div>
              <div class="row form-group mb-4">
                <div class="col-md-12"><h3>Job Description</h3></div>
                <div class="col-md-12 mb-3 mb-md-0">
                  @*<textarea name="" class="form-control" id="" cols="30" rows="5"></textarea>*@
                  @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "", cols = "30", rows = "5" })
                  @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
              </div>

              <div class="row form-group mb-4">
                <div class="col-md-12"><h3>Is this urgent?</h3><small>Additional fee (RM 10) will be charged</small></div>
                <div class="col-md-12 mb-3 mb-md-0">
                  <label for="option-price-1">
                    @Html.CheckBoxFor(m => m.Immediate, new { @class = "option-price-1" }) @Html.DisplayNameFor(m => m.Immediate)
                  </label>
                </div>
              </div>

              <div class="row form-group mb-4">
                <div class="col-md-12"><h3>Price</h3></div>
                <div class="col-md-12 mb-3 mb-md-0">
                  @*<input type="text" id="fullname" class="form-control" placeholder="eg. Facebook, Inc.">*@
                  @Html.TextBoxFor(m => m.Price, new { @class = "form-control", type = "number", @readonly=true })
                  @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
              </div>

              <div class="row form-group mb-4">
                <div class="col-md-12"><h3>Image</h3></div>
                <div class="col-md-10">
                  <label class="text-info p-2 rounded border border-info" id="upload">
                    @Html.TextBoxFor(m => m.ImageFile, new
               {
                 type = "file",
                 accept = "image/jpeg,image/png",
                 hidden = ""
               })
                    <img src="~/Image/Profile/photo.jpg">
                  </label>
                </div>
                @Html.ValidationMessageFor(model => model.ImageFile, "", new { @class = "text-danger" })
              </div>

              <div class="form-row form-group mb-5">
                <div class="col-md-12"><h3>Documents</h3></div>
                <div class="col-md-12 mb-3 mb-md-0">
                  @Html.TextBoxFor(m => m.Document, new { type = "file", @multiple = "@multiple" })
                  @Html.ValidationMessageFor(model => model.Document, "", new { @class = "text-danger" })
                </div>
              </div>
              <div class="row form-group">
                <div class="col-md-12">
                  <input type="submit" value="Post a Job" class="btn btn-primary  py-2 px-5">
                </div>
              </div>


              @*</form>*@
            </div>
          </div>

          <div class="col-lg-4">
            <div class="p-4 mb-3 bg-white">
              <h3 class="h5 text-black mb-3">Seeker Contact Info</h3>
              <p class="mb-0 font-weight-bold">Address</p>
              <p class="mb-4">203 Fake St. Mountain View, San Francisco, California, USA</p>

              <p class="mb-0 font-weight-bold">Phone</p>
              <p class="mb-4"><a href="#">@Model.Contact</a></p>

              <p class="mb-0 font-weight-bold">Email Address</p>
              <p class="mb-0"><a href="#">@Model.Seeker</a></p>

            </div>

            <div class="p-4 mb-3 bg-white">
              <h3 class="h5 text-black mb-3">More Info</h3>
              <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ipsa ad iure porro mollitia architecto hic consequuntur. Distinctio nisi perferendis dolore, ipsa consectetur</p>
              <p><a href="#" class="btn btn-primary  py-2 px-4">Learn More</a></p>
            </div>
          </div>}
      </div>
    </div>
  </div>




  <div class="site-section">
    <div class="container">
      <div class="row justify-content-center text-center mb-5">
        <div class="col-md-6" data-aos="fade">
          <h2>Frequently Ask Questions</h2>
        </div>
      </div>


      <div class="row justify-content-center" data-aos="fade" data-aos-delay="100">
        <div class="col-md-8">
          <div class="accordion unit-8" id="accordion">
            <div class="accordion-item">
              <h3 class="mb-0 heading">
                <a class="btn-block" data-toggle="collapse" href="#collapseOne" role="button" aria-expanded="true" aria-controls="collapseOne">What is the name of your company<span class="icon"></span></a>
              </h3>
              <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                <div class="body-text">
                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Consequatur quae cumque perspiciatis aperiam accusantium facilis provident aspernatur nisi optio debitis dolorum, est eum eligendi vero aut ad necessitatibus nulla sit labore doloremque magnam! Ex molestiae, dolor tempora, ad fuga minima enim mollitia consequuntur, necessitatibus praesentium eligendi officia recusandae culpa tempore eaque quasi ullam magnam modi quidem in amet. Quod debitis error placeat, tempore quasi aliquid eaque vel facilis culpa voluptate.</p>
                </div>
              </div>
            </div> <!-- .accordion-item -->

            <div class="accordion-item">
              <h3 class="mb-0 heading">
                <a class="btn-block" data-toggle="collapse" href="#collapseTwo" role="button" aria-expanded="false" aria-controls="collapseTwo">How much pay for 3  months?<span class="icon"></span></a>
              </h3>
              <div id="collapseTwo" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                <div class="body-text">
                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vel ad laborum expedita. Nostrum iure atque enim quisquam minima distinctio omnis, consequatur aliquam suscipit, quidem, esse aspernatur! Libero, excepturi animi repellendus porro impedit nihil in doloremque a quaerat enim voluptatum, perspiciatis, quas dignissimos maxime ut cum reiciendis eius dolorum voluptatem aliquam!</p>
                </div>
              </div>
            </div> <!-- .accordion-item -->

            <div class="accordion-item">
              <h3 class="mb-0 heading">
                <a class="btn-block" data-toggle="collapse" href="#collapseThree" role="button" aria-expanded="false" aria-controls="collapseThree">Do I need to register?  <span class="icon"></span></a>
              </h3>
              <div id="collapseThree" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                <div class="body-text">
                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vel ad laborum expedita. Nostrum iure atque enim quisquam minima distinctio omnis, consequatur aliquam suscipit, quidem, esse aspernatur! Libero, excepturi animi repellendus porro impedit nihil in doloremque a quaerat enim voluptatum, perspiciatis, quas dignissimos maxime ut cum reiciendis eius dolorum voluptatem aliquam!</p>
                </div>
              </div>
            </div> <!-- .accordion-item -->

            <div class="accordion-item">
              <h3 class="mb-0 heading">
                <a class="btn-block" data-toggle="collapse" href="#collapseFour" role="button" aria-expanded="false" aria-controls="collapseFour">Who should I contact in case of support.<span class="icon"></span></a>
              </h3>
              <div id="collapseFour" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                <div class="body-text">
                  <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Vel ad laborum expedita. Nostrum iure atque enim quisquam minima distinctio omnis, consequatur aliquam suscipit, quidem, esse aspernatur! Libero, excepturi animi repellendus porro impedit nihil in doloremque a quaerat enim voluptatum, perspiciatis, quas dignissimos maxime ut cum reiciendis eius dolorum voluptatem aliquam!</p>
                </div>
              </div>
            </div> <!-- .accordion-item -->

          </div>
        </div>
      </div>

    </div>
  </div>
</div>


<script>
  document.addEventListener('DOMContentLoaded', function () {
    var mediaElements = document.querySelectorAll('video, audio'), total = mediaElements.length;

    for (var i = 0; i < total; i++) {
      new MediaElementPlayer(mediaElements[i], {
        pluginPath: 'https://cdn.jsdelivr.net/npm/mediaelement@4.2.7/build/',
        shimScriptAccess: 'always',
        success: function () {
          var target = document.body.querySelectorAll('.player'), targetTotal = target.length;
          for (var j = 0; j < targetTotal; j++) {
            target[j].style.visibility = 'visible';
          }
        }
      });
    }
  });</script>




@section foot {
  @Scripts.Render("~/bundles/jqueryval")
  <script src="https://www.gstatic.com/firebasejs/7.21.0/firebase-app.js"></script>
  <script src="https://www.gstatic.com/firebasejs/7.17.1/firebase-firestore.js"></script>
  <script src="~/Scripts/vue.js"></script>
  <script src="~/Scripts/vuefire.js"></script>

  <script>

    firebase.initializeApp({
      projectId: "rit3mwxccx-fyp",
      storageBucket: 'gs://rit3mwxccx-fyp.appspot.com'
    });

    const db = firebase.firestore().collection('notify');
    Vue.use(Vuefire.firestorePlugin);

    const app = new Vue({
      el: '#app',
      data: {
        type: '',
        rid: '',
        immediate: false
      },
      method: {

      }
    });



    // This example displays an address form, using the autocomplete feature
    // of the Google Places API to help users fill in the information.

    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

    var placeSearch, autocomplete;
    var componentForm = {
      street_number: 'short_name',
      route: 'long_name',
      locality: 'long_name',
      administrative_area_level_1: 'short_name',
      country: 'long_name',
      postal_code: 'short_name'
    };

    function initAutocomplete() {
      // Create the autocomplete object, restricting the search to geographical
      // location types.
      autocomplete = new google.maps.places.Autocomplete(
                      /** type {!HTMLInputElement} */(document.getElementById('autocomplete')),
        { types: ['geocode'] });

      // When the user selects an address from the dropdown, populate the address
      // fields in the form.
      autocomplete.addListener('place_changed', fillInAddress);
    }

    function fillInAddress() {
      // Get the place details from the autocomplete object.
      var place = autocomplete.getPlace();

      for (var component in componentForm) {
        document.getElementById(component).value = '';
        document.getElementById(component).disabled = false;
      }

      // Get each component of the address from the place details
      // and fill the corresponding field on the form.
      for (var i = 0; i < place.address_components.length; i++) {
        var addressType = place.address_components[i].types[0];
        if (componentForm[addressType]) {
          var val = place.address_components[i][componentForm[addressType]];
          document.getElementById(addressType).value = val;
        }
      }
    }

    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
          var geolocation = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };
          var circle = new google.maps.Circle({
            center: geolocation,
            radius: position.coords.accuracy
          });
          autocomplete.setBounds(circle.getBounds());
        });
      }
    }
    function validatePhoto(f) {
      let reType = /^image\/(jpeg|png)$/i;
      let reName = /^.+\.(jpg|jpeg|png)$/i;

      return f &&
        f.size <= 1 * 1024 * 1024 &&
        reType.test(f.type) &&
        reName.test(f.name);
    }

    let src = null;

    $('#upload input').change(e => {
      let f = e.target.files[0];
      let img = $(e.target).siblings('img')[0];

      if (!src) src = img.src;

      if (validatePhoto(f)) {
        img.src = URL.createObjectURL(f);
      }
      else {
        img.src = src;
        e.target.value = '';
      }
      $(e.target).valid();
    });

    $(document).ready(() => {
      $('#Category').trigger('change');

    });

    $('#Category').change(() => {
      console.log($('#Category option:selected').val());

      //let x = $('#Category option:selected').val();
      //console.log($('#Immediate').val());

      getPrice($('#Category option:selected').val(), $('#Immediate').is(':checked'))

    });

    $('#Immediate').change(() => {
      console.log("Category");

      //let x = $('#Category option:selected').val();
      console.log($('#Immediate').is(':checked'));

      getPrice($('#Category option:selected').val(), $('#Immediate').is(':checked'))

    });

    function getPrice(id, immediate) {
      $.ajax({
        url: '/Service/getPrice',
        type: 'GET',
        data: { id: id, immediate: immediate },
        success: function (data) {
          if (data != null) {
            $('#Price').val(data);

          } else {
            alert('Error, return null');
          }
        },
        error: function () {
          alert('Error getting data.');
        }
      });
    }
  </script>
}
