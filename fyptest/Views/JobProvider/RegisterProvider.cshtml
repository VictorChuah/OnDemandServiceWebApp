@using fyptest.Models
@*@using GoogleRecaptcha.Infrastructure.HtmlHelpers*@
@model RegisterModel

@{ ViewBag.Title = "RegisterProvider";
  Layout = "~/Views/Shared/_Layout.cshtml"; }


<div style="height: 113px;"></div>

<div class="limiter">
  <div class="container-login100">
    <div class="wrap-login100">
      <div class="login100-form-title" style="background-image: url(@Url.Content("~/Content/login/")images/image4.jpg);">
        <span class="login100-form-title-1">
          Sign Up
        </span>
      </div>

      @Html.ValidationSummary(true)

      @using (Html.BeginForm("RegisterProvider", "JobProvider", FormMethod.Post))
      {
@Html.AntiForgeryToken() @*@using (Html.BeginForm())
  {
    @Html.AntiForgeryToken()*@

        <div class="form-horizontal">
          <h4 style="text-align: center; font-weight: bold;">(Only For Employer)</h4>
          <hr />
          @Html.ValidationSummary(true, "", new { @class = "text-danger" })
          <div class="form-group">
            @Html.LabelFor(model => model.Name, "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input100", placeholder = "Full Name" } })
              @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.Password, "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control input100", placeholder = "Password" } })
              @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPass, "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.ConfirmPass, new { htmlAttributes = new { @class = "form-control input100", placeholder = "Re-type Password" } })
              @Html.ValidationMessageFor(model => model.ConfirmPass, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.Phone, "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control input100", placeholder = "Contact Number" } })
              @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
          </div>

          <div class="form-group">
            @Html.LabelFor(model => model.Email, "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control input100", placeholder = "Email" } })
              @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
          </div>



          <div class="container-login100-form-btn">
            <button class="login100-form-btn">
              Sign Up
            </button>
          </div>
        </div>}
    </div>
  </div>
</div>
@section foot {
  @Scripts.Render("~/bundles/jqueryval")
}
